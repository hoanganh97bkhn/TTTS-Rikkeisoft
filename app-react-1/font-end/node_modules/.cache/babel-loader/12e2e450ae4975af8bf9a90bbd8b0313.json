{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nimport config from './../config/index';\nimport axios from 'axios';\nlet initialState;\naxios({\n  url: \"\".concat(config.baseUrl, \"/get-all\"),\n  method: 'get'\n}).then(response => {\n  console.log(response.data);\n  initialState = response.data;\n}).catch(error => {\n  console.log(error);\n});\n\nlet myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SHOW_ALL:\n      state = action.data;\n      return state;\n\n    case types.SHOW_MODEL:\n      state = action.data.filter((item, index) => {\n        if (item.model === 1) {\n          return true;\n        } else return false;\n      });\n      return state;\n\n    case types.SHOW_GOOD:\n      state = action.data.filter((item, index) => {\n        if (item.good === 1) {\n          return true;\n        } else return false;\n      });\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/reducers/sort.js"],"names":["types","config","axios","initialState","url","baseUrl","method","then","response","console","log","data","catch","error","myReducer","state","action","type","SHOW_ALL","SHOW_MODEL","filter","item","index","model","SHOW_GOOD","good"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,YAAJ;AAEAD,KAAK,CAAC;AACFE,EAAAA,GAAG,YAAKH,MAAM,CAACI,OAAZ,aADD;AAEFC,EAAAA,MAAM,EAAE;AAFN,CAAD,CAAL,CAIKC,IAJL,CAIWC,QAAD,IAAc;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAR,EAAAA,YAAY,GAAGK,QAAQ,CAACG,IAAxB;AACD,CAPL,EAQKC,KARL,CAQYC,KAAD,IAAW;AAChBJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,CAVL;;AAYA,IAAIC,SAAS,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAsBa,MAAtB,KAAiC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACIH,MAAAA,KAAK,GAAGC,MAAM,CAACL,IAAf;AACA,aAAOI,KAAP;;AACJ,SAAKf,KAAK,CAACmB,UAAX;AACIJ,MAAAA,KAAK,GAAGC,MAAM,CAACL,IAAP,CAAYS,MAAZ,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrC,YAAGD,IAAI,CAACE,KAAL,KAAe,CAAlB,EAAqB;AACjB,iBAAO,IAAP;AACH,SAFD,MAGK,OAAO,KAAP;AACJ,OALG,CAAR;AAMI,aAAOR,KAAP;;AACR,SAAKf,KAAK,CAACwB,SAAX;AACQT,MAAAA,KAAK,GAAGC,MAAM,CAACL,IAAP,CAAYS,MAAZ,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrC,YAAGD,IAAI,CAACI,IAAL,KAAc,CAAjB,EAAoB;AAClB,iBAAO,IAAP;AACD,SAFD,MAGK,OAAO,KAAP;AACN,OALK,CAAR;AAMA,aAAOV,KAAP;;AACR;AAAU,aAAOA,KAAP;AApBd;AAsBH,CAvBD;;AAyBA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes'\nimport config from './../config/index'\nimport axios from 'axios';\n\nlet initialState;\n\naxios({\n    url: `${config.baseUrl}/get-all`,\n    method: 'get',\n    })\n    .then((response) => {\n      console.log(response.data);\n      initialState = response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\nlet myReducer = (state = initialState,action) => {\n    switch(action.type){\n        case types.SHOW_ALL:\n            state = action.data;\n            return state;\n        case types.SHOW_MODEL:\n            state = action.data.filter((item,index)=>{\n                if(item.model === 1) {\n                    return true\n                }  \n                else return false;\n                })\n                return state;\n        case types.SHOW_GOOD:\n                state = action.data.filter((item,index)=>{\n                    if(item.good === 1) {\n                      return true\n                    }  \n                    else return false;\n                  })\n                return state;\n        default : return state;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}