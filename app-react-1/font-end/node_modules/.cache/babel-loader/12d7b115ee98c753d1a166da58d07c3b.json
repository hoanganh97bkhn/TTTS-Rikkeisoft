{"ast":null,"code":"import _objectSpread from \"/home/thispc/Documents/TTS/app-react-1/font-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/thispc/Documents/TTS/app-react-1/font-end/src/components/helpers/Modals.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from './../../actions/index';\n\nclass Modals extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeId = e => {\n      this.setState({\n        data: _objectSpread({}, this.state.data, {\n          id: e.target.value\n        })\n      });\n    };\n\n    this.handleChangePass = e => {\n      this.setState({\n        data: _objectSpread({}, this.state.data, {\n          pass: e.target.value\n        })\n      });\n    };\n\n    this.state = {\n      data: {\n        id: \"\",\n        pass: \"\"\n      }\n    };\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\u0110\\u0103ng nh\\u1EADp\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\"), React.createElement(Input, {\n      onChange: this.handleChangeId,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"M\\u1EADt kh\\u1EA9u\"), React.createElement(Input, {\n      onChange: this.handleChangePass,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.props.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u0110\\u0103ng nh\\u1EADp\"), React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.props.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"H\\u1EE7y\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.modals\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    toggleModal: () => {\n      dispatch(actions.modals());\n    },\n    handleSubmitt: data => {\n      dispatch(actions.callApiSingInn(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/components/helpers/Modals.jsx"],"names":["React","Component","Modal","ModalHeader","ModalBody","ModalFooter","Input","Button","connect","actions","Modals","constructor","props","handleChangeId","e","setState","data","state","id","target","value","handleChangePass","pass","render","isOpen","toggleModal","handleSubmit","mapStateToProps","modals","mapDispatchToProps","dispatch","handleSubmitt","callApiSingInn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Modal, ModalHeader, ModalBody, ModalFooter,Input,Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from './../../actions/index';\n\n\nclass Modals extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            data : {\n              id : \"\",\n              pass : \"\"\n            }\n        }\n    }\n\n    handleChangeId = (e) => {\n        this.setState({\n          data : {...this.state.data, id:e.target.value} \n        })\n      }\n  \n    handleChangePass = (e) => {\n        this.setState({\n          data : {...this.state.data, pass:e.target.value} \n        })\n      }\n      \n    render() {\n        const {data} = this.state;\n        return (\n            <div>\n                <Modal isOpen={this.props.isOpen}>\n                    <ModalHeader toggle={this.toggleModal}>Đăng nhập</ModalHeader>\n                    <ModalBody>\n                      <p>Tên đăng nhập</p>\n                      <Input onChange = {this.handleChangeId} type=\"text\"></Input>\n                      <p className=\"mt-3\">Mật khẩu</p>\n                      <Input onChange = {this.handleChangePass} type=\"password\"></Input>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.props.handleSubmit}>Đăng nhập</Button>\n                        <Button color=\"danger\" onClick={this.props.toggleModal}>Hủy</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isOpen : state.modals\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        toggleModal : ()=>{\n            dispatch(actions.modals())\n        },\n        handleSubmitt : (data) => {\n            dispatch(actions.callApiSingInn(data));\n        }\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);"]},"metadata":{},"sourceType":"module"}