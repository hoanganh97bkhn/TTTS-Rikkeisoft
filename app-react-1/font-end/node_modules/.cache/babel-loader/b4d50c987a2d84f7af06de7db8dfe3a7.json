{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport config from \"./../config/index\";\n\nfunction signupApi() {\n  return axios({\n    method: \"GET\",\n    url: \"\".concat(config.baseUrl, \"/api/sing-in\")\n  });\n}\n\nfunction* signupFlow() {\n  //const { id, pass } = action.data\n  try {\n    const response = yield call(signupApi);\n    const data = response.data;\n    yield put({\n      type: \"SIGNUP_SUCCESS\",\n      response\n    });\n  } catch (error) {\n    yield put({\n      type: \"SIGNUP_ERROR\",\n      error\n    });\n  }\n}\n\nexport function* watchSingIn() {\n  yield takeLatest(\"CALL-API-SINGIN\", signupFlow);\n}","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/sagas/saga.js"],"names":["takeLatest","call","put","axios","config","signupApi","method","url","baseUrl","signupFlow","response","data","type","error","watchSingIn"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,SAAT,GAAoB;AAClB,SAAOF,KAAK,CAAC;AACXG,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,YAAKH,MAAM,CAACI,OAAZ;AAFQ,GAAD,CAAZ;AAID;;AAED,UAAUC,UAAV,GAAsB;AACpB;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACI,SAAD,CAA3B;AACA,UAAMM,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AAEA,UAAMT,GAAG,CAAC;AAAEU,MAAAA,IAAI,EAAE,gBAAR;AAA0BF,MAAAA;AAA1B,KAAD,CAAT;AACD,GALD,CAKE,OAAMG,KAAN,EAAY;AACZ,UAAMX,GAAG,CAAC;AAAEU,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA;AAAxB,KAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMd,UAAU,CAAC,iBAAD,EAAoBS,UAApB,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios';\nimport config from \"./../config/index\"\n\nfunction signupApi(){\n  return axios({\n    method: \"GET\",\n    url: `${config.baseUrl}/api/sing-in`,\n  });\n}\n\nfunction* signupFlow(){\n  //const { id, pass } = action.data\n  try {\n    const response = yield call(signupApi); \n    const data = response.data;\n    \n    yield put({ type: \"SIGNUP_SUCCESS\", response })\n  } catch(error){\n    yield put({ type: \"SIGNUP_ERROR\", error })\n  }\n}\n\nexport function* watchSingIn() {\n  yield takeLatest(\"CALL-API-SINGIN\", signupFlow);\n}\n"]},"metadata":{},"sourceType":"module"}