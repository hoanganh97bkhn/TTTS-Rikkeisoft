{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nimport config from './../config/index';\nimport axios from 'axios';\nlet initialState;\n\nlet myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SHOW_ALL:\n      state = action.data;\n      return state;\n\n    case types.SHOW_MODEL:\n      state = action.data.filter((item, index) => {\n        if (item.model === 1) {\n          return true;\n        } else return false;\n      });\n      return state;\n\n    case types.SHOW_GOOD:\n      state = action.data.filter((item, index) => {\n        if (item.good === 1) {\n          return true;\n        } else return false;\n      });\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/reducers/sort.js"],"names":["types","config","axios","initialState","myReducer","state","action","type","SHOW_ALL","data","SHOW_MODEL","filter","item","index","model","SHOW_GOOD","good"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,YAAJ;;AAGA,IAAIC,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAsBG,MAAtB,KAAiC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,KAAK,CAACQ,QAAX;AACIH,MAAAA,KAAK,GAAGC,MAAM,CAACG,IAAf;AACA,aAAOJ,KAAP;;AACJ,SAAKL,KAAK,CAACU,UAAX;AACIL,MAAAA,KAAK,GAAGC,MAAM,CAACG,IAAP,CAAYE,MAAZ,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrC,YAAGD,IAAI,CAACE,KAAL,KAAe,CAAlB,EAAqB;AACjB,iBAAO,IAAP;AACH,SAFD,MAGK,OAAO,KAAP;AACJ,OALG,CAAR;AAMI,aAAOT,KAAP;;AACR,SAAKL,KAAK,CAACe,SAAX;AACQV,MAAAA,KAAK,GAAGC,MAAM,CAACG,IAAP,CAAYE,MAAZ,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrC,YAAGD,IAAI,CAACI,IAAL,KAAc,CAAjB,EAAoB;AAClB,iBAAO,IAAP;AACD,SAFD,MAGK,OAAO,KAAP;AACN,OALK,CAAR;AAMA,aAAOX,KAAP;;AACR;AAAU,aAAOA,KAAP;AApBd;AAsBH,CAvBD;;AAyBA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes'\nimport config from './../config/index'\nimport axios from 'axios';\n\nlet initialState;\n\n\nlet myReducer = (state = initialState,action) => {\n    switch(action.type){\n        case types.SHOW_ALL:\n            state = action.data;\n            return state;\n        case types.SHOW_MODEL:\n            state = action.data.filter((item,index)=>{\n                if(item.model === 1) {\n                    return true\n                }  \n                else return false;\n                })\n                return state;\n        case types.SHOW_GOOD:\n                state = action.data.filter((item,index)=>{\n                    if(item.good === 1) {\n                      return true\n                    }  \n                    else return false;\n                  })\n                return state;\n        default : return state;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}