{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nimport config from './../config/index';\nimport axios from 'axios';\nlet initialState = [];\nconsole.log(initialState);\n\nlet myReducer = (state = initialState, action) => {\n  let newState = [...initialState];\n  let listArray = [...initialState];\n\n  switch (action.type) {\n    case types.SHOW_ALL:\n      console.log(state);\n      return newState;\n\n    case types.SHOW_MODEL:\n      console.log(state);\n      listArray = newState.filter((item, index) => {\n        if (item.model === 1) {\n          return true;\n        } else return false;\n      });\n      console.log(\"new\", state);\n      return listArray;\n\n    case types.SHOW_GOOD:\n      console.log(state);\n      listArray = newState.filter((item, index) => {\n        if (item.good === 1) {\n          return true;\n        } else return false;\n      });\n      return listArray;\n\n    default:\n      return newState;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/reducers/sort.js"],"names":["types","config","axios","initialState","console","log","myReducer","state","action","newState","listArray","type","SHOW_ALL","SHOW_MODEL","filter","item","index","model","SHOW_GOOD","good"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,YAAY,GAAG,EAAnB;AAEAC,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACA,IAAIG,SAAS,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAsBK,MAAtB,KAAiC;AAE7C,MAAIC,QAAQ,GAAG,CAAC,GAAGN,YAAJ,CAAf;AACA,MAAIO,SAAS,GAAG,CAAC,GAAGP,YAAJ,CAAhB;;AACA,UAAOK,MAAM,CAACG,IAAd;AACI,SAAKX,KAAK,CAACY,QAAX;AACQR,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,aAAOE,QAAP;;AACR,SAAKT,KAAK,CAACa,UAAX;AACIT,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAG,MAAAA,SAAS,GAAGD,QAAQ,CAACK,MAAT,CAAgB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACtC,YAAGD,IAAI,CAACE,KAAL,KAAe,CAAlB,EAAqB;AACjB,iBAAO,IAAP;AACH,SAFD,MAGK,OAAO,KAAP;AACJ,OALO,CAAZ;AAMIb,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBE,KAAlB;AACA,aAAOG,SAAP;;AACR,SAAKV,KAAK,CAACkB,SAAX;AACQd,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACJG,MAAAA,SAAS,GAAGD,QAAQ,CAACK,MAAT,CAAgB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACtC,YAAGD,IAAI,CAACI,IAAL,KAAc,CAAjB,EAAoB;AAChB,iBAAO,IAAP;AACH,SAFD,MAGK,OAAO,KAAP;AACJ,OALO,CAAZ;AAMI,aAAOT,SAAP;;AACR;AAAU,aAAOD,QAAP;AAvBd;AAyBH,CA7BD;;AA+BA,eAAeH,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes'\nimport config from './../config/index'\nimport axios from 'axios';\n\nlet initialState = []\n    \nconsole.log(initialState)\nlet myReducer = (state = initialState,action) => {\n\n    let newState = [...initialState];\n    let listArray = [...initialState];\n    switch(action.type){\n        case types.SHOW_ALL:\n                console.log(state);\n                return newState;\n        case types.SHOW_MODEL:\n            console.log(state);\n            listArray = newState.filter((item,index)=>{\n                if(item.model === 1) {\n                    return true\n                }  \n                else return false;\n                })\n                console.log(\"new\",state);\n                return listArray;\n        case types.SHOW_GOOD:\n                console.log(state);\n            listArray = newState.filter((item,index)=>{\n                if(item.good === 1) {\n                    return true\n                }  \n                else return false;\n                })\n                return listArray;\n        default : return newState;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}