{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport config from \"./../config/index\";\n\nfunction signupApi(id, pass) {\n  console.log('dkm  ');\n  return axios({\n    method: \"POST\",\n    url: \"\".concat(config.baseUrl, \"/api/sing-in\")\n  });\n}\n\nfunction* signupFlow(action) {\n  const _action$data = action.data,\n        id = _action$data.id,\n        pass = _action$data.pass;\n\n  try {\n    const response = yield call(signupApi, id, pass);\n    yield put({\n      type: \"SIGNUP_SUCCESS\",\n      response\n    });\n  } catch (error) {\n    yield put({\n      type: \"SIGNUP_ERROR\",\n      error\n    });\n  }\n}\n\nexport function* watchSingIn() {\n  yield takeLatest(\"CALL-API-SINGIN\", signupFlow);\n}","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/sagas/saga.js"],"names":["takeLatest","call","put","axios","config","signupApi","id","pass","console","log","method","url","baseUrl","signupFlow","action","data","response","type","error","watchSingIn"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,IAAvB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAON,KAAK,CAAC;AACXO,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,YAAKP,MAAM,CAACQ,OAAZ;AAFQ,GAAD,CAAZ;AAID;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AAAA,uBACLA,MAAM,CAACC,IADF;AAAA,QAClBT,EADkB,gBAClBA,EADkB;AAAA,QACdC,IADc,gBACdA,IADc;;AAE1B,MAAI;AACF,UAAMS,QAAQ,GAAG,MAAMf,IAAI,CAACI,SAAD,EAAYC,EAAZ,EAAgBC,IAAhB,CAA3B;AACA,UAAML,GAAG,CAAC;AAAEe,MAAAA,IAAI,EAAE,gBAAR;AAA0BD,MAAAA;AAA1B,KAAD,CAAT;AACD,GAHD,CAGE,OAAME,KAAN,EAAY;AACZ,UAAMhB,GAAG,CAAC;AAAEe,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA;AAAxB,KAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMnB,UAAU,CAAC,iBAAD,EAAoBa,UAApB,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios';\nimport config from \"./../config/index\"\n\nfunction signupApi(id, pass){\n  console.log('dkm  ')\n  return axios({\n    method: \"POST\",\n    url: `${config.baseUrl}/api/sing-in`,\n  });\n}\n\nfunction* signupFlow(action){\n  const { id, pass } = action.data\n  try {\n    const response = yield call(signupApi, id, pass) \n    yield put({ type: \"SIGNUP_SUCCESS\", response })\n  } catch(error){\n    yield put({ type: \"SIGNUP_ERROR\", error })\n  }\n}\n\nexport function* watchSingIn() {\n  yield takeLatest(\"CALL-API-SINGIN\", signupFlow);\n}\n"]},"metadata":{},"sourceType":"module"}