{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nimport config from './../config/index';\nimport axios from 'axios';\nimport { start } from 'repl';\n\nlet myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SHOW_ALL:\n      return action.data;\n\n    case types.SHOW_MODEL:\n      state = action.data.filter((item, index) => {\n        if (item.model === 1) {\n          return true;\n        } else return false;\n      });\n      return state;\n\n    case types.SHOW_GOOD:\n      state = action.data.filter((item, index) => {\n        if (item.good === 1) {\n          return true;\n        } else return false;\n      });\n      return state;\n\n    default:\n      return newState;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/reducers/sort.js"],"names":["types","config","axios","start","myReducer","state","initialState","action","type","SHOW_ALL","data","SHOW_MODEL","filter","item","index","model","SHOW_GOOD","good","newState"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,IAAIC,SAAS,GAAG,CAACC,KAAK,GAAGC,YAAT,EAAsBC,MAAtB,KAAiC;AAE7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,KAAK,CAACS,QAAX;AACQ,aAAOF,MAAM,CAACG,IAAd;;AACR,SAAKV,KAAK,CAACW,UAAX;AACIN,MAAAA,KAAK,GAAGE,MAAM,CAACG,IAAP,CAAYE,MAAZ,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrC,YAAGD,IAAI,CAACE,KAAL,KAAe,CAAlB,EAAqB;AACjB,iBAAO,IAAP;AACH,SAFD,MAGK,OAAO,KAAP;AACJ,OALG,CAAR;AAMI,aAAOV,KAAP;;AACR,SAAKL,KAAK,CAACgB,SAAX;AACIX,MAAAA,KAAK,GAAGE,MAAM,CAACG,IAAP,CAAYE,MAAZ,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrC,YAAGD,IAAI,CAACI,IAAL,KAAc,CAAjB,EAAoB;AAChB,iBAAO,IAAP;AACH,SAFD,MAGK,OAAO,KAAP;AACJ,OALG,CAAR;AAMI,aAAOZ,KAAP;;AACR;AAAU,aAAOa,QAAP;AAnBd;AAqBH,CAvBD;;AAyBA,eAAed,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes'\nimport config from './../config/index'\nimport axios from 'axios';\nimport { start } from 'repl';\n\nlet myReducer = (state = initialState,action) => {\n    \n    switch(action.type){\n        case types.SHOW_ALL:\n                return action.data;\n        case types.SHOW_MODEL:\n            state = action.data.filter((item,index)=>{\n                if(item.model === 1) {\n                    return true\n                }  \n                else return false;\n                })\n                return state;\n        case types.SHOW_GOOD:\n            state = action.data.filter((item,index)=>{\n                if(item.good === 1) {\n                    return true\n                }  \n                else return false;\n                })\n                return state;\n        default : return newState;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}