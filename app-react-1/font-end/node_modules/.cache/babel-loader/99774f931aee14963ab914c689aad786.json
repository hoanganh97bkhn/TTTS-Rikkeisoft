{"ast":null,"code":"var _jsxFileName = \"/home/thispc/Documents/TTS/app-react-1/font-end/src/components/helpers/ModalsFile.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input, Button } from 'reactstrap';\nimport axios from 'axios';\nimport config from './../../config/index';\n\nclass ModalsFile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handeleFileChosen = e => {\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      e.preventDefault();\n\n      reader.onloadend = () => {\n        this.setState({\n          fileimages: [...this.state.fileimages, file],\n          imagePreviewUrl: [...this.state.imagePreviewUrl, reader.result]\n        });\n      };\n\n      if (file) reader.readAsDataURL(file);\n    };\n\n    this.handleSubmit = e => {\n      axios({\n        url: \"\".concat(config.baseUrl, \"/upload-image\"),\n        method: \"post\",\n        headers: {\n          'content-type': 'multipart/form-data'\n        },\n        data: formData\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      fileimages: [],\n      imagePreviewUrl: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.title), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"file\",\n      onChange: this.handeleFileChosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"S\\u1EEDa\"), React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.props.isToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"H\\u1EE7y\"))));\n  }\n\n}\n\nexport default ModalsFile;","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/components/helpers/ModalsFile.jsx"],"names":["React","Component","Modal","ModalHeader","ModalBody","ModalFooter","Input","Button","axios","config","ModalsFile","constructor","props","handeleFileChosen","e","reader","FileReader","file","target","files","preventDefault","onloadend","setState","fileimages","state","imagePreviewUrl","result","readAsDataURL","handleSubmit","url","baseUrl","method","headers","data","formData","then","response","console","log","catch","error","render","isOpen","toggleModal","title","isToggle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,WAAvC,EAAmDC,KAAnD,EAAyDC,MAAzD,QAAuE,YAAvE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AAC/BU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,iBARkB,GAQGC,CAAD,IAAO;AACvB,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAIC,IAAI,GAAGH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;AAEAL,MAAAA,CAAC,CAACM,cAAF;;AACAL,MAAAA,MAAM,CAACM,SAAP,GAAmB,MAAM;AACrB,aAAKC,QAAL,CAAc;AACVC,UAAAA,UAAU,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,UAAf,EAA2BN,IAA3B,CADF;AAEZQ,UAAAA,eAAe,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,eAAf,EAAgCV,MAAM,CAACW,MAAvC;AAFL,SAAd;AAID,OALH;;AAOA,UAAGT,IAAH,EAASF,MAAM,CAACY,aAAP,CAAqBV,IAArB;AACZ,KArBiB;;AAAA,SAuBlBW,YAvBkB,GAuBFd,CAAD,IAAO;AAClBN,MAAAA,KAAK,CAAC;AACFqB,QAAAA,GAAG,YAAKpB,MAAM,CAACqB,OAAZ,kBADD;AAEFC,QAAAA,MAAM,QAFJ;AAGFC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAHP;AAMFC,QAAAA,IAAI,EAAGC;AANL,OAAD,CAAL,CAQKC,IARL,CAQWC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;AACD,OAVL,EAWKM,KAXL,CAWYC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAXtB;AAYH,KApCiB;;AAEd,SAAKhB,KAAL,GAAa;AACTD,MAAAA,UAAU,EAAG,EADJ;AAETE,MAAAA,eAAe,EAAG;AAFT,KAAb;AAIH;;AAgCDgB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAK7B,KAAL,CAAW8B,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAK/B,KAAL,CAAWgC,KAAnD,CADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAK/B,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,EAKI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKe,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWiC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CALJ,CADJ,CADJ;AAcH;;AAtD8B;;AAyDnC,eAAenC,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Modal, ModalHeader, ModalBody, ModalFooter,Input,Button } from 'reactstrap';\nimport axios from 'axios';\nimport config from './../../config/index'\n\nclass ModalsFile extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fileimages : [],\n            imagePreviewUrl : [],\n        }\n    }\n\n    handeleFileChosen = (e) => {\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        \n        e.preventDefault();\n        reader.onloadend = () => {\n            this.setState({\n                fileimages: [...this.state.fileimages, file],\n              imagePreviewUrl: [...this.state.imagePreviewUrl, reader.result]\n            });\n          }\n      \n        if(file) reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (e) => {\n        axios({\n            url: `${config.baseUrl}/upload-image`,\n            method: `post`,\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            data : formData\n            })\n            .then((response) => {\n              console.log(response.data);\n            })\n            .catch((error) => console.log(error));\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal isOpen={this.props.isOpen}>\n                    <ModalHeader toggle={this.toggleModal}>{this.props.title}</ModalHeader>\n                    <ModalBody>\n                      <Input type=\"file\" onChange={this.handeleFileChosen}></Input>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Sửa</Button>\n                        <Button color=\"danger\" onClick={this.props.isToggle}>Hủy</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalsFile;"]},"metadata":{},"sourceType":"module"}