{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport config from \"./../config/index\";\n\nfunction signupApi(data, pass) {\n  return axios({\n    method: \"POST\",\n    url: \"\".concat(config.baseUrl, \"/api/sing-in\"),\n    data: data\n  });\n}\n\nfunction* signupFlow(action) {\n  const _action$data = action.data,\n        data = _action$data.data,\n        url = _action$data.url;\n  console.log(action.data);\n\n  try {\n    const response = yield call(signupApi, data, url);\n    const data = response.data;\n    yield put({\n      type: \"UPLOAD_SUCCESS\",\n      data\n    });\n  } catch (error) {\n    yield put({\n      type: \"UPLOAD_ERROR\",\n      error\n    });\n  }\n}\n\nexport function* watchUpload() {\n  yield takeLatest(\"CALL_API_UPLOAD\", signupFlow);\n}","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/sagas/callAPIUpload.js"],"names":["takeLatest","call","put","axios","config","signupApi","data","pass","method","url","baseUrl","signupFlow","action","console","log","response","type","error","watchUpload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAwBC,IAAxB,EAA6B;AAC3B,SAAOJ,KAAK,CAAC;AACXK,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,YAAKL,MAAM,CAACM,OAAZ,iBAFQ;AAGXJ,IAAAA,IAAI,EAAGA;AAHI,GAAD,CAAZ;AAKD;;AAED,UAAUK,UAAV,CAAqBC,MAArB,EAA4B;AAAA,uBACJA,MAAM,CAACN,IADH;AAAA,QAClBA,IADkB,gBAClBA,IADkB;AAAA,QACZG,GADY,gBACZA,GADY;AAE1BI,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACN,IAAnB;;AACA,MAAI;AACF,UAAMS,QAAQ,GAAG,MAAMd,IAAI,CAACI,SAAD,EAAWC,IAAX,EAAgBG,GAAhB,CAA3B;AACA,UAAMH,IAAI,GAAGS,QAAQ,CAACT,IAAtB;AACA,UAAMJ,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAE,gBAAR;AAA0BV,MAAAA;AAA1B,KAAD,CAAT;AACD,GAJD,CAIE,OAAMW,KAAN,EAAY;AACZ,UAAMf,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA;AAAxB,KAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMlB,UAAU,CAAC,iBAAD,EAAoBW,UAApB,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects'\nimport axios from 'axios';\nimport config from \"./../config/index\"\n\nfunction signupApi(data,pass){\n  return axios({\n    method: \"POST\",\n    url: `${config.baseUrl}/api/sing-in`,\n    data : data\n  });\n}\n\nfunction* signupFlow(action){\n  const { data, url } = action.data\n  console.log(action.data)\n  try {\n    const response = yield call(signupApi,data,url); \n    const data = response.data;\n    yield put({ type: \"UPLOAD_SUCCESS\", data })\n  } catch(error){\n    yield put({ type: \"UPLOAD_ERROR\", error })\n  }\n}\n\nexport function* watchUpload() {\n  yield takeLatest(\"CALL_API_UPLOAD\", signupFlow);\n}\n"]},"metadata":{},"sourceType":"module"}