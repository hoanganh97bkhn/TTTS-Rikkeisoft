{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nimport config from './../config/index';\nimport axios from 'axios';\nlet data = [];\naxios({\n  url: \"\".concat(config.baseUrl, \"/api/get-all\"),\n  method: 'get'\n}).then(response => {\n  data = response.data;\n}).catch(error => {\n  console.log(error);\n});\nconsole.log(data);\nexport const status = () => {\n  return {\n    type: types.TOGGLE_STATUS\n  };\n};\nexport const showAll = () => {\n  return {\n    type: types.SHOW_ALL,\n    data\n  };\n};\nexport const showModel = () => {\n  return {\n    type: types.SHOW_MODEL,\n    data\n  };\n};\nexport const showGood = () => {\n  return {\n    type: types.SHOW_GOOD,\n    data\n  };\n};","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/actions/index.js"],"names":["types","config","axios","data","url","baseUrl","method","then","response","catch","error","console","log","status","type","TOGGLE_STATUS","showAll","SHOW_ALL","showModel","SHOW_MODEL","showGood","SHOW_GOOD"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,IAAI,GAAG,EAAX;AACAD,KAAK,CAAC;AACFE,EAAAA,GAAG,YAAKH,MAAM,CAACI,OAAZ,iBADD;AAEFC,EAAAA,MAAM,EAAE;AAFN,CAAD,CAAL,CAIKC,IAJL,CAIWC,QAAD,IAAc;AAChBL,EAAAA,IAAI,GAAGK,QAAQ,CAACL,IAAhB;AACH,CANL,EAOKM,KAPL,CAOYC,KAAD,IAAW;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,CATL;AAUAC,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,OAAO,MAAMU,MAAM,GAAG,MAAM;AACxB,SAAM;AACFC,IAAAA,IAAI,EAAGd,KAAK,CAACe;AADX,GAAN;AAGH,CAJM;AAMP,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAGd,KAAK,CAACiB,QADV;AAEHd,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMe,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHJ,IAAAA,IAAI,EAAGd,KAAK,CAACmB,UADV;AAEHhB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMiB,QAAQ,GAAG,MAAM;AAC1B,SAAO;AACHN,IAAAA,IAAI,EAAGd,KAAK,CAACqB,SADV;AAEHlB,IAAAA;AAFG,GAAP;AAIH,CALM","sourcesContent":["import * as types from './../constants/ActionTypes';\nimport config from './../config/index';\nimport axios from 'axios';\n\nlet data = [];\naxios({\n    url: `${config.baseUrl}/api/get-all`,\n    method: 'get'\n    })\n    .then((response) => {\n        data = response.data;\n    })\n    .catch((error) => {\n        console.log(error)\n    });\nconsole.log(data)\nexport const status = () => {\n    return{\n        type : types.TOGGLE_STATUS,\n    }\n}\n\nexport const showAll = () => {\n    return {\n        type : types.SHOW_ALL,\n        data\n    }\n}\n\nexport const showModel = () => {\n    return {\n        type : types.SHOW_MODEL,\n        data\n    }\n}\n\nexport const showGood = () => {\n    return {\n        type : types.SHOW_GOOD,\n        data\n    }\n}"]},"metadata":{},"sourceType":"module"}