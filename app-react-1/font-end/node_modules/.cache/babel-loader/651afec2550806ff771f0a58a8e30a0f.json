{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nimport config from './../config/index';\nimport axios from 'axios';\nlet data = [];\naxios({\n  url: \"\".concat(config.baseUrl, \"/api/get-all\"),\n  method: 'get'\n}).then(response => {\n  data = response.data.data;\n  console.log(data);\n}).catch(error => {\n  console.log(error);\n});\nlet initialState = [];\n\nlet myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SHOW_ALL:\n      return action.data;\n\n    case types.SHOW_MODEL:\n      state = action.data.filter((item, index) => {\n        if (item.model === 1) {\n          return true;\n        } else return false;\n      });\n      return state;\n\n    case types.SHOW_GOOD:\n      state = action.data.filter((item, index) => {\n        if (item.good === 1) {\n          return true;\n        } else return false;\n      });\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/reducers/sort.js"],"names":["types","config","axios","data","url","baseUrl","method","then","response","console","log","catch","error","initialState","myReducer","state","action","type","SHOW_ALL","SHOW_MODEL","filter","item","index","model","SHOW_GOOD","good"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,IAAI,GAAG,EAAX;AACAD,KAAK,CAAC;AACFE,EAAAA,GAAG,YAAKH,MAAM,CAACI,OAAZ,iBADD;AAEFC,EAAAA,MAAM,EAAE;AAFN,CAAD,CAAL,CAIKC,IAJL,CAIWC,QAAD,IAAc;AAChBL,EAAAA,IAAI,GAAGK,QAAQ,CAACL,IAAT,CAAcA,IAArB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACH,CAPL,EAQKQ,KARL,CAQYC,KAAD,IAAW;AACdH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,CAVL;AAYA,IAAIC,YAAY,GAAG,EAAnB;;AACA,IAAIC,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAsBG,MAAtB,KAAiC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOF,MAAM,CAACb,IAAd;;AACJ,SAAKH,KAAK,CAACmB,UAAX;AACIJ,MAAAA,KAAK,GAAGC,MAAM,CAACb,IAAP,CAAYiB,MAAZ,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrC,YAAGD,IAAI,CAACE,KAAL,KAAe,CAAlB,EAAqB;AACjB,iBAAO,IAAP;AACH,SAFD,MAGK,OAAO,KAAP;AACJ,OALG,CAAR;AAMI,aAAOR,KAAP;;AACR,SAAKf,KAAK,CAACwB,SAAX;AACIT,MAAAA,KAAK,GAAGC,MAAM,CAACb,IAAP,CAAYiB,MAAZ,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACrC,YAAGD,IAAI,CAACI,IAAL,KAAc,CAAjB,EAAoB;AAChB,iBAAO,IAAP;AACH,SAFD,MAGK,OAAO,KAAP;AACJ,OALG,CAAR;AAMI,aAAOV,KAAP;;AACR;AAAU,aAAOA,KAAP;AAnBd;AAqBH,CAtBD;;AAwBA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes'\nimport config from './../config/index';\nimport axios from 'axios';\n\nlet data = [];\naxios({\n    url: `${config.baseUrl}/api/get-all`,\n    method: 'get'\n    })\n    .then((response) => {\n        data = response.data.data;\n        console.log(data)\n    })\n    .catch((error) => {\n        console.log(error)\n    });\n\nlet initialState = [];\nlet myReducer = (state = initialState,action) => {\n    switch(action.type){\n        case types.SHOW_ALL:\n            return action.data\n        case types.SHOW_MODEL:\n            state = action.data.filter((item,index)=>{\n                if(item.model === 1) {\n                    return true\n                }  \n                else return false;\n                })\n                return state;\n        case types.SHOW_GOOD:\n            state = action.data.filter((item,index)=>{\n                if(item.good === 1) {\n                    return true\n                }  \n                else return false;\n                })\n                return state;\n        default : return state;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}