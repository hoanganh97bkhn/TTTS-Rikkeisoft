{"ast":null,"code":"var _jsxFileName = \"/home/thispc/Documents/TTS/app-react-1/font-end/src/components/helpers/ModalsFile.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input, Button } from 'reactstrap';\nimport axios from 'axios';\nimport config from './../../config/index';\nimport { connect } from 'react-redux';\nimport * as actions from './../../actions/index';\n\nclass ModalsFile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handeleFileChosen = e => {\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      e.preventDefault();\n\n      reader.onloadend = () => {\n        this.setState({\n          fileimages: [...this.state.fileimages, file]\n        });\n      };\n\n      if (file) reader.readAsDataURL(file);\n    };\n\n    this.handleSubmit = e => {\n      let formData = new FormData();\n      this.state.fileimages.map((item, index) => formData.append('file', item, item.name));\n      formData.append('temp', this.props.temp);\n      axios({\n        url: \"\".concat(config.baseUrl, \"/api/\").concat(this.props.url),\n        method: \"post\",\n        headers: {\n          'content-type': 'multipart/form-data'\n        },\n        data: formData\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      fileimages: [],\n      imagePreviewUrl: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.title), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"file\",\n      onChange: this.handeleFileChosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.props.isToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"H\\u1EE7y\"))));\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, s);\nexport default ModalsFile;","map":{"version":3,"sources":["/home/thispc/Documents/TTS/app-react-1/font-end/src/components/helpers/ModalsFile.jsx"],"names":["React","Component","Modal","ModalHeader","ModalBody","ModalFooter","Input","Button","axios","config","connect","actions","ModalsFile","constructor","props","handeleFileChosen","e","reader","FileReader","file","target","files","preventDefault","onloadend","setState","fileimages","state","readAsDataURL","handleSubmit","formData","FormData","map","item","index","append","name","temp","url","baseUrl","method","headers","data","then","response","console","log","catch","error","imagePreviewUrl","render","isOpen","toggleModal","title","isToggle","mapDispatchToProps","dispatch","s"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Modal, ModalHeader, ModalBody, ModalFooter,Input,Button } from 'reactstrap';\nimport axios from 'axios';\nimport config from './../../config/index'\nimport { connect } from 'react-redux';\nimport * as actions from './../../actions/index';\n\n\nclass ModalsFile extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fileimages : [],\n            imagePreviewUrl : [],\n        }\n    }\n\n    handeleFileChosen = (e) => {\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        \n        e.preventDefault();\n        reader.onloadend = () => {\n            this.setState({\n                fileimages: [...this.state.fileimages, file],\n            });\n          }\n      \n        if(file) reader.readAsDataURL(file);\n    }\n\n    handleSubmit = (e) => {\n        let formData = new FormData();\n        this.state.fileimages.map((item, index) => (\n            formData.append('file', item, item.name)\n        ))\n            formData.append('temp',this.props.temp)\n\n        axios({\n            url: `${config.baseUrl}/api/${this.props.url}`,\n            method: `post`,\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            data : formData\n            })\n            .then((response) => {\n              console.log(response.data);\n            })\n            .catch((error) => console.log(error));\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal isOpen={this.props.isOpen}>\n                    <ModalHeader toggle={this.toggleModal}>{this.props.title}</ModalHeader>\n                    <ModalBody>\n                      <Input type=\"file\" onChange={this.handeleFileChosen}></Input>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.handleSubmit}>Upload</Button>\n                        <Button color=\"danger\" onClick={this.props.isToggle}>Há»§y</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch, s)\n\nexport default ModalsFile;"]},"metadata":{},"sourceType":"module"}